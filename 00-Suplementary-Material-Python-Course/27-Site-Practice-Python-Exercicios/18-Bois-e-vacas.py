# !/usr/bin/python3.4   # Scripts executaveis em python (shebang)
# https://www.practicepython.org/exercise/2014/07/05/18-cows-and-bulls.html

import sys
print(sys.version)
##########################################################################
# Create a program that will play the “cows and bulls” game with the user.
# The game works like this:

# Randomly generate a 4-digit number. Ask the user to guess a 4-digit number.
# For every digit that the user guessed correctly in the correct place, they
# have a “cow”. For every digit the user guessed correctly in the wrong place
# is a “bull.” Every time the user makes a guess, tell them how many “cows”
# and “bulls” they have. Once the user guesses the correct number, the game
# is over. Keep track of the number of guesses the user makes throughout teh
# game and tell the user at the end.

# Say the number generated by the computer is 1038. An example interaction
# could look like this:

#   Welcome to the Cows and Bulls Game!
#   Enter a number:
#   >>> 1234
#   2 cows, 0 bulls
#   >>> 1256
#   1 cow, 1 bull
#   ...
#
# Until the user guesses the number.

import random

def solicita_numero(mensagem = "Bem vindo ao jogo Vacas e Bois!"):
    while True:
        try:
            resultado = int(input("Insira um número de 4 dígitos: "))
            if resultado > 999 and resultado < 10000:
                return str(resultado)
            else:
                print("O número inserido não possui 4 dígitos. \
Tente novamente...")
            # break
        except Exception as e:
            print("Erro: Entre com um valor numérico. Tente novamente...")

def gera_numero():
    return str(random.randrange(1000, 9999))

def compara_listas(chute, numero):
    vacas = 0
    bois = 0
    for i in range(len(numero)):
        if chute[i] == numero[i]:
            vacas += 1
    for i in chute:
        if i in numero:
            bois  += 1

    bois -= vacas

    # print("Sorteio:\t{0:s}.\nChute:\t\t{1:s}.\n{2:d} vacas, {3:d} bois.".format(numero, chute, vacas, bois))
    print("Chute:\t{0:s}.\n{1:d} vacas, {2:d} bois.".format(chute, vacas, bois))

# print("{0:s}".format(solicita_numero()))
# print("{0:s}".format(gera_numero()))


if __name__ == "__main__":
    
    chute  = solicita_numero()
    numero = gera_numero()

    i = 0
    while chute != numero:
        if i >= 1:
            chute  = solicita_numero()
        compara_listas(chute, numero)
        i += 1
    print("Acertou, depois de {0:d} tentativas. O número era {1:s}!".format(i, numero))
